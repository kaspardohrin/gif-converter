{"version":3,"sources":["components/NoteInput.tsx","components/NoteDisplay.tsx","components/Converter.tsx","components/QuestionDisplay.tsx","App.tsx","reducer/notes.ts","store/store.ts","index.tsx"],"names":["NoteInput","add","React","useState","note","note_set","create","text","ts","Date","now","id","v4","className","onChange","event","target","value","replace","onKeyPress","key","name","placeholder","onClick","NoteDisplay","remove","notes","useSelector","state","map","i","click","icon","faTimes","toUTCString","ffmpeg","createFFmpeg","Converter","ready","ready_set","start","start_set","length","length_set","video_length","video_length_set","video","video_set","gif","gif_set","converting","converting_set","useEffect","load","a","isLoaded","convert","fetchFile","FS","run","data","url","URL","createObjectURL","Blob","buffer","type","controls","src","onLoadedMetadata","e","input","duration","Number","String","split","video_length_get","files","item","pop","n_length","n_begin","width","alt","QuestionDisplay","App","note_toggle","note_toggle_set","question_toggle","question_toggle_set","dispatch","useDispatch","title","faStickyNote","faQuestionCircle","payload","notes_initial","storage","JSON","parse","localStorage","getItem","storage_get","storage_set","storage_old","storage_new","stringify","setItem","storage_unset","filter","x","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81052529.chunk.js","sourcesContent":["\r\nimport React, { ChangeEvent, KeyboardEvent } from 'react'\r\n\r\nimport { v4 } from 'uuid'\r\n\r\nimport './NoteInput.scss'\r\n\r\nimport { Note } from '../types/notes'\r\n\r\ninterface Props {\r\n  add(note: Note): void\r\n}\r\n\r\nexport const NoteInput: React.FC<Props> = ({ add }) => {\r\n  const [note, note_set] = React.useState('')\r\n\r\n  const update = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    note_set(event.target.value.replace(/^\\W$/g, ''))\r\n  }\r\n  const enter = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (event.key !== 'Enter' || !note) return; create()\r\n  }\r\n  const click = () => {\r\n    if (!note) return; create()\r\n  }\r\n  const create = () => {\r\n    add({ text: note, ts: Date.now(), id: v4() }); note_set('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"note-input-container\">\r\n      <textarea\r\n        onChange={update}\r\n        onKeyPress={enter}\r\n        value={note}\r\n        name='note'\r\n        placeholder='Type here'\r\n      />\r\n      <button onClick={click}>Add</button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport './NoteDisplay.scss'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { State } from '../reducer/notes'\r\nimport { Note } from '../types/notes'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\ninterface Props {\r\n  remove(note: Note): void;\r\n}\r\n\r\nexport const NoteDisplay: React.FC<Props> = ({ remove }) => {\r\n  const notes = useSelector<State, State['notes']>((state) => state.notes)\r\n\r\n  const click = (note: Note): void => {\r\n    remove(note)\r\n  }\r\n\r\n  return (\r\n    <div className='notes-display-container'>\r\n      <ul>\r\n        {notes.map((note, i) => (\r\n          <li key={i}>\r\n            <button onClick={() => click(note)}><FontAwesomeIcon icon={faTimes} /></button>\r\n            {note.text}\r\n            <span>{new Date(note.ts).toUTCString()}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, ChangeEvent } from 'react'\r\nimport { createFFmpeg, fetchFile, FFmpeg } from '@ffmpeg/ffmpeg'\r\n\r\nimport './Converter.scss'\r\n\r\ninterface Props { }\r\n\r\nconst ffmpeg: FFmpeg = createFFmpeg(/*{log: true}*/)\r\n\r\nexport const Converter: React.FC<Props> = () => {\r\n  const [ready, ready_set] = React.useState<boolean>(false)\r\n\r\n  const [start, start_set] = React.useState<string>('0')\r\n  const [length, length_set] = React.useState<string>('5')\r\n  const [video_length, video_length_set] = React.useState<number>(0)\r\n\r\n  const [video, video_set] = React.useState<any>()\r\n  const [gif, gif_set] = React.useState<string>('')\r\n\r\n  const [converting, converting_set] = React.useState<boolean>(false)\r\n\r\n  useEffect(() => {load()}, [/*empty array prevents it from running again*/])\r\n\r\n  const load = async (): Promise<void> => {\r\n    if (ffmpeg.isLoaded()) return ready_set(true)\r\n\r\n    await ffmpeg.load(); ready_set(true)\r\n  }\r\n\r\n  const video_length_get = (event: React.SyntheticEvent<HTMLVideoElement, Event>): any => {\r\n    // @ts-ignore\r\n    const input: number = event.target.duration\r\n\r\n    const value: number = Number(String(input).split(/\\./g)[0])\r\n\r\n    video_length_set(value)\r\n  }\r\n\r\n  const begin_update = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let input: number = Number(event.target.value)\r\n    let n_length: number = Number(length)\r\n\r\n    if (!video) return\r\n\r\n    if (input < 0) return start_set('0')\r\n\r\n    if (input > video_length) input = video_length - 1; start_set(`${video_length - 1}`)\r\n\r\n    if ((n_length + input - 1) > video_length) length_set(`${video_length - input}`)\r\n\r\n    if (input >= video_length) return\r\n\r\n    start_set(`${input}`)\r\n  }\r\n\r\n  const length_update = (event: ChangeEvent<HTMLInputElement>) => {\r\n    let input: number = Number(event.target.value)\r\n    let n_begin: number = Number(start)\r\n\r\n    if (!video) return\r\n\r\n    if (input < 1) return length_set('1')\r\n\r\n    if (input > video_length) input = video_length; length_set(`${video_length}`)\r\n\r\n    if ((n_begin + input) > video_length) start_set(`${video_length - input}`)\r\n\r\n    if (input >= video_length) return\r\n\r\n    length_set(`${input}`)\r\n  }\r\n\r\n  const video_update = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const video: any = event.target.files?.item(0)!\r\n\r\n    if (\r\n      video.name.split(/\\./g).pop() !== 'mp4'\r\n      && video.type !== 'video/mp4'\r\n    ) return\r\n\r\n    video_set(video)\r\n  }\r\n\r\n  const convert = async (): Promise<void> => {\r\n    if (!video) return\r\n\r\n    converting_set(true)\r\n\r\n    await ffmpeg.FS('writeFile', 'test.mp4', await fetchFile(video))\r\n    await ffmpeg.run('-i', 'test.mp4', '-t', `${length}`, '-ss', `${start}`, '-f', 'gif', 'out.gif')\r\n\r\n    converting_set(false)\r\n\r\n    const data: Buffer = ffmpeg.FS('readFile', 'out.gif')\r\n    const url: string = URL.createObjectURL(new Blob([data.buffer], { type: 'image/gif' }))\r\n\r\n    gif_set(url)\r\n  }\r\n\r\n    return ready\r\n    ? (\r\n      <div className='media-container'>\r\n        {\r\n          (video)\r\n              ? <video controls src={URL.createObjectURL(video)} onLoadedMetadata={(e) => video_length_get(e)}></video>\r\n            : <div className='placeholder-video'></div>\r\n          }\r\n\r\n        <div className='control-panel'>\r\n          <input onChange={video_update} type='file' />\r\n          <span>Start:</span>\r\n          <input onChange={begin_update} type='number' placeholder={start} value={start} />\r\n          <span>Duration:</span>\r\n          <input onChange={length_update} type='number' placeholder={length} value={length} />\r\n          <button onClick={convert}>Convert</button>\r\n        </div>\r\n        {\r\n          (gif)\r\n              ? <img src={gif} width='250' alt={`gif of the video you've uploaded`} />\r\n              : <div className={`placeholder-gif`}>\r\n                  <div className={`${(converting) ? 'loading' : ''}`}></div>\r\n                </div>\r\n        }\r\n      </div>\r\n      ) : (\r\n      <div className='loading-screen'>\r\n        <div id=\"spinner\" />\r\n      </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport './QuestionDisplay.scss'\r\n\r\ninterface Props {}\r\n\r\nexport const QuestionDisplay: React.FC<Props> = () => {\r\n\r\n  return (\r\n    <div className='questions-display-container'>\r\n\r\n      <h3>Instant GIF Converter</h3>\r\n        This application uses TypeScript React and Redux to manage the state of the notes you add.\r\n        <br /><br />\r\n        It's been my first time creating a React application from scratch.\r\n        <br /><br />\r\n        Besides learning Redux, state-management and the React-types I've been getting a bit side-tracked:\r\n\r\n      <ul>\r\n        <li>\r\n          I've added local-storage for the notes, which allows for notes to be stored for ever.\r\n        </li>\r\n\r\n        <li>\r\n          I've added a video-to-gif-converter using ffmpeg, a library written in C, which compliles to Web Assembly. Web Assembly is a very new technology, which, instead of compiling everything to Javascript in webbrowsers, compiles to machine code. Where compilers can be build for basically any language, with near native performance. For this reason, and the library being in C, the conversion of video, which is normally done on the cloud as Javascript in the browser simply isn't powerfull enough, allows for this performance-heavy-task to be performed directly in the webbrowser, using the users hardware.\r\n        </li>\r\n\r\n        <li>\r\n          You can add any video file, select where you want the gif to start, and how long you want the gif to be. Then simply select the convert button, and the gif will display below the video preview.\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport './App.scss'\n\nimport { useDispatch } from 'react-redux'\n\nimport { NoteInput } from './components/NoteInput'\nimport { NoteDisplay } from './components/NoteDisplay'\nimport { Converter } from './components/Converter'\nimport { QuestionDisplay } from './components/QuestionDisplay'\n\nimport { Note } from './types/notes'\nimport { faQuestionCircle, faStickyNote } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nfunction App() {\n  const [note_toggle, note_toggle_set] = React.useState<boolean>(false)\n  const [question_toggle, question_toggle_set] = React.useState<boolean>(false)\n\n  const dispatch = useDispatch()\n\n  const add = (note: Note): void => {\n    dispatch({type: 'ADD_NOTE', payload: note})\n  }\n\n  const remove = (note: Note): void => {\n    dispatch({type: 'REMOVE_NOTE', payload: note})\n  }\n\n  const click_note = (): void => {\n    note_toggle_set(!note_toggle)\n    question_toggle_set(false)\n  }\n\n  const click_question = (): void => {\n    question_toggle_set(!question_toggle)\n    note_toggle_set(false)\n}\n\n  return (\n    <div className='App'>\n      <div className='side-panel-container'>\n        <button className='sticky-note' title='Notes' onClick={click_note}><FontAwesomeIcon icon={faStickyNote}></FontAwesomeIcon></button>\n        <button className='question-mark' title='Info' onClick={click_question}><FontAwesomeIcon icon={faQuestionCircle}></FontAwesomeIcon></button>\n      </div>\n      <div className={`notes-container ${(note_toggle) ? '' : 'hidden'}`}>\n        <NoteInput add={add}></NoteInput>\n        <NoteDisplay remove={remove}></NoteDisplay>\n      </div>\n      <div className={`questions-container ${(question_toggle) ? '' : 'hidden'}`}>\n        <QuestionDisplay />\n      </div>\n      <div className='converter-container'>\n        <Converter />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { Note } from '../types/notes'\r\n\r\nexport interface State {\r\n    notes: Array<Note>\r\n}\r\n\r\nconst notes_initial = {\r\n    notes: storage_get('notes')\r\n        ?? [{ text: 'Welkom! Dit is je eerste notitie :) Type in het invoerveld om nieuwe notities toe te voegen!', ts: Date.now(), id: '1', }]\r\n}\r\n\r\ntype Action = {\r\n    type: 'ADD_NOTE' | 'REMOVE_NOTE' | 'DISPLAY_NOTE',\r\n    payload: Note,\r\n}\r\n\r\nexport const notes_reducer = (state: State = notes_initial, action: Action) => {\r\n    switch (action.type) {\r\n        case 'ADD_NOTE':\r\n            storage_set('notes', action.payload)\r\n\r\n            return { ...state, notes: [action.payload, ...state.notes] }\r\n        case 'REMOVE_NOTE':\r\n            storage_unset('notes', action.payload)\r\n\r\n            return { ...state, notes: [...state.notes.filter(x => x.id !== action.payload.id)] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction storage_get(key: string,) {\r\n    const storage: Array<Note> = JSON.parse(localStorage.getItem(key)!)\r\n\r\n    return (storage.length !== 0) ? storage : null\r\n}\r\n\r\nfunction storage_set(key: string, data: Note,) {\r\n    const storage_old: Array<Note> = JSON.parse(localStorage.getItem(key)!)\r\n\r\n    const storage_new: string = JSON.stringify([data, ...storage_old,])\r\n\r\n    localStorage.setItem(key, storage_new)\r\n}\r\n\r\nfunction storage_unset(key: string, data: Note,) {\r\n    const storage_old: Array<Note> = JSON.parse(localStorage.getItem(key)!)\r\n\r\n    const filter = storage_old.filter(x => x.id !== data.id)\r\n\r\n    const storage_new: string = JSON.stringify([...filter])\r\n\r\n    localStorage.setItem(key, storage_new)\r\n}\r\n","import { createStore } from 'redux'\r\nimport { notes_reducer } from '../reducer/notes'\r\n\r\nexport const store = createStore(notes_reducer)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}